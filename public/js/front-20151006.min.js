/*-------start page scripts------*/

//viewport for storing dimensions
var viewport = new Object();
viewport.watch = true; // do I have to update menu based on scroll position
viewport.treshold = 961; //mobile below

var ie9 = $('html').hasClass('ie9')? true : false;

$(document).ready(function () {

    //Set viewport first
    checkViewport();

    //SVG images
    if (!Modernizr.svg) {
        $("img[src$='.svg']").each(function(){
            $(this).attr("src", $(this).data('fallback'));
        })
    }

    //show mobile menu
    $('.responsive-switch').on('click', function (e) {
        return mobileMenuShowHide();
        e.stopPropagation();
        e.preventDefault();
        return false;
    });

    //navigation scroll
    $('.scroll-to').on('click', function (e) {
        e.stopPropagation();
        e.preventDefault();
        var href = $(this).attr('href');
        navigateTo($(href).offset().top);
        return false;
    });

    //scroll up
    $('.scroll-to-top').on('click', function (e) {
        e.stopPropagation();
        e.preventDefault();
        navigateTo(0);
        return false;
    });

    //------------slideshow
    var owl = $('.owl-carousel');
    owl.owlCarousel({
        items: 1,
        responsive: {
            items: 1
        },
        autoHeight: true,
        lazyLoad: true,
        loop: true,
        margin: 10
    });

    //init first slide caption
    owl.each(function(){
        var link = setActiveLink($(this),0);
        showCaption(link);


        //update links & caption
        $(this).on('translated.owl.carousel', function(event) {
            var link = setActiveLink($(this), event.page.index);
            showCaption(link);
        });

        //clicks on slideshow
        $(this).on('click', function(){
            $(this).trigger('next.owl.carousel');
        });


        $(this).on('resized.owl.carousel', function (event) {
            var $this = $(this);
            $this.find('.owl-height').css('height', $this.find('.owl-item.active').height());
        })

    });

    //clicks on links
    $('[data-owl-links]').on('click','a', function(e){
        //if(!$('body').hasClass('body-small')){
        e.preventDefault();
        var parent = $(this).parents('[data-owl-links]');
        var index = $('li a', parent).index($(this));
        getOwlForLink($(this)).trigger('to.owl.carousel', [index]);
        //}
    });

    //clicks on news
    $('.news-message').on('click', function(){
        window.location = $(this).find('a').attr('href');
    });

    //lang label
    $('.js-lang-close').on('click', function (e) {
        e.preventDefault();
        var $langNav = $(this).parents('.lang');
        $langNav.addClass('is-closed');
        setTimeout(function() {
            $langNav.remove();
        }, 1000);
    });

});

$(window).load(function () {
    $('body').addClass('body-loaded');
    checkViewport();
    scrollUpdate();
    loadBackground();

    //opensource masonry
    $('.packages').masonry({
        // options
        itemSelector: '.package'
    });

})


$(window).scroll(function () {
    scrollUpdate();
})

$(window).resize(function () {
    checkViewport();
    scrollUpdate();

    //resizeTimer = setTimeout(owlRedraw, 500);
})

function owlRedraw(){

    clearTimeout(resizeTimer);

    var owl = $('.owl-carousel');
    owl.each(function(){
        $(this).trigger('to.owl.carousel', [0]);
    })
}

/*--------functions*/

function scrollUpdate() {
    if ($(window).scrollTop() < 75) {

        $("body").removeClass('body-scrolled');
        $('.in-viewport-active').removeClass('in-viewport-active');
        $('.menu .active').removeClass('active');
    }
    else {
        $("body").addClass('body-scrolled');

        if (viewport.watch && ($('.in-viewport').size() > 0) ) {

            var scrollPosition = $(window).scrollTop();
            //sync menu with element in viewport
            viewport.start = scrollPosition;
            viewport.end = scrollPosition + viewport.height;

            var $remember = false ;

            $('.in-viewport').each(function () {
                //determine margins for each block
                var elementStart = $(this).data('start') + 100;
                var elementEnd = $(this).data('end');

                /*//element going out of view?
                 if ((viewport.start <= elementEnd) && (elementEnd < viewport.end)) {
                 elementInViewport($(this));
                 }*/
                ;

                //element coming in view?
                if (elementStart  > viewport.start) {
                    elementInViewport($(this));
                    return false; //break each loop after first upcoming element
                }

            });

        }
    }
}

function elementInViewport($element) {
    $('.in-viewport-active').removeClass('in-viewport-active');


    //update menu
    $('.menu .active').removeClass('active');
    $('.menu [href="#' + $element.attr('id') + '"]').addClass('active');

    $element.addClass('in-viewport-active');

}

function checkViewport() {

    //store browser width/height
    viewport.height = $(window).height();
    viewport.width = $(window).width();

    if (viewport.width < viewport.treshold) {
        viewport.small = true;
        $('body').addClass('body-small').removeClass('body-large');
        mobileMenuHide();
    }
    else {
        viewport.small = false;
        if($('body').hasClass('body-small')){
            $('body').removeClass('body-small').addClass('body-large');
            $('header').removeClass('responsive-menu-shown');
            $('.menu ul').show();
            //$('.in-viewport-first-time').removeClass('in-viewport-first-time');
        }
    }

    //calculate start end for each block
    $('.in-viewport').each(function () {
        //determine margins for each block with 100 margin
        $(this).data('start', $(this).offset().top);
        $(this).data('end', $(this).offset().top + $(this).height());
    });

    //reset blocks on orientation change in touch
    //$('.touch .in-viewport-first-time').removeClass('in-viewport-first-time');
};

function mobileMenuShowHide() {
    if (viewport.small) {
        if (!$('header').hasClass('responsive-menu-shown')) {
            $('header').addClass('responsive-menu-shown');
            $('.menu ul').show();
            $('.responsive-switch').text('sluit');
        }
        else {
            mobileMenuHide();
        }
    }
    return false;
}

function mobileMenuHide() {
    if (viewport.small) {
        $('header').removeClass('responsive-menu-shown');
        $('.menu ul').hide();
        $('.responsive-switch').text('menu');
    }
}

function navigateTo(y) {
    mobileMenuHide();
    viewport.watch = false; //disable during scroll for performance

    $('body,html').animate({scrollTop: y}, '7000', 'swing', function () {
        viewport.watch = true;
        scrollUpdate();
    });
}

function loadBackground(){
    //enhance backgrounds and animate if opacity
    $('[data-background]').each(function () {

        var background = $(this).data('background');
        var element = $(this);
        if(Modernizr.opacity) var opacity = $(this).css('opacity');

        $('<img/>').attr('src', background).load(function () {
            $(this).remove();
            if(Modernizr.opacity) element.css('opacity', 0);
            element.css('background-image', 'url("' + background + '")');
            if(Modernizr.opacity) element.animate({opacity: opacity}, 300);
        });

    });
}

//owl functions
function setActiveLink(owl, index){
    var links = getLinksForOwl(owl);
    links.removeClass('active');

    var link = $(links[index]);
    link.addClass('active');
    return link;
}

function showCaption(link){
    var owl = getOwlForLink(link);
    var text = owl.find($('.active .slide-caption')).html();
    var visitText =  link.data("owl-caption-text") != undefined ? link.data("owl-caption-text") : 'open site';
    var visit = $('<a href="'+ link.attr("href") +'">'+ visitText +' </a>');
    var caption =  $('[data-owl-caption='+ owl.data('owl') +']');
    caption.html(text).append(visit);
}

function getOwlForLink(link){
    var parent = link.parents('[data-owl-links]');
    var subject = parent.data('owl-links');
    return $('[data-owl='+subject+']');
}

function getLinksForOwl(owl){
    var links = $('[data-owl-links='+ owl.data('owl') +'] li a');
    return links;
}